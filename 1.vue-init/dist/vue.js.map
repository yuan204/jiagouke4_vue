{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 用来描述标签的\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的  捕获的是结束标签的标签名\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的  分组1 拿到的是属性名  , 分组3 ，4， 5 拿到的是key对应的值\n\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的    />    >   \nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // 匹配双花括号中间单的内容\n\nfunction parserHTML(html) {\n    function advance(n) {\n        html = html.substring(n); // 每次根据传入的长度截取html\n    }\n    let root; // 树的操作 ，需要根据开始标签和结束标签产生一个树\n    // 如何构建树的父子关系\n    let stack = [];\n\n    function createASTElement(tagName, attrs) {\n        return {\n            tag: tagName,\n            attrs,\n            children: [],\n            parent: null,\n            type: 1\n        }\n    }\n\n    function start(tagName, attrs) {\n        let element = createASTElement(tagName, attrs);\n        if (root == null) {\n            root = element;\n        }\n        let parent = stack[stack.length - 1]; // 取到栈中的最后一个\n        if (parent) {\n            element.parent = parent; // 让这个元素记住自己的父亲是谁\n            parent.children.push(element) // 让父亲记住儿子是谁\n        }\n        stack.push(element); // 将元素放到栈中\n    }\n\n    function end(tagName) {\n        stack.pop();\n    }\n\n    function chars(text) {\n        text = text.replace(/\\s/g, '');\n        if (text) {\n            let parent = stack[stack.length - 1];\n            parent.children.push({\n                type: 3,\n                text\n            })\n        }\n    }\n    //  ast 描述的是语法本身 ，语法中没有的，不会被描述出来  虚拟dom 是描述真实dom的可以自己增添属性\n    while (html) { // 一个个字符来解析将结果抛出去\n        let textEnd = html.indexOf('<');\n        if (textEnd === 0) {\n            const startTagMatch = parseStartTag(); // 解析开始标签  {tag:'div',attrs:[{name:\"id\",value:\"app\"}]}\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs);\n                continue\n            }\n            let matches;\n            if (matches = html.match(endTag)) { // <div>    </div>  不是开始就会走道结束\n                end(matches[1]);\n                advance(matches[0].length);\n                continue\n            }\n        }\n        let text;\n        if (textEnd >= 0) {\n            text = html.substring(0, textEnd)\n        }\n        if (text) {\n            advance(text.length);\n            chars(text);\n        }\n    }\n\n    function parseStartTag() {\n        const matches = html.match(startTagOpen);\n        if (matches) {\n            const match = {\n                tagName: matches[1],\n                attrs: []\n            }\n            advance(matches[0].length);\n            // 继续解析开始标签的属性 \n            let end, attr\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) { // 只要没有匹配到结束标签就一直匹配\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true });\n                advance(attr[0].length); // 解析一个属性删除一个\n            }\n            if (end) {\n                advance(end[0].length);\n                return match;\n            }\n        }\n    }\n    return root;\n}\n\nfunction genProps(attrs) {\n    let str = '';\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i];\n        // style=\"color:red;background:blue\"\n        if (attr.name === 'style') { // style=\"{color:red,background:blue}\"\n            let obj = {}\n            attr.value.split(';').reduce((memo, current) => {\n                let [key, value] = current.split(':')\n                memo[key] = value;\n                return memo;\n            }, obj);\n            attr.value = obj;\n        }\n\n        // 特殊的属性 style\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0,-1)}}`\n}\n\nfunction gen(node) {\n    if (node.type === 1) {\n        return genCode(node)\n    } else {\n        let text = node.text;\n        if (!defaultTagRE.test(text)) {\n            return `_v(${JSON.stringify(text)})` // 不带表达式的\n        } else {\n            let tokens = [];\n            let match;\n            // exec 遇到全局匹配会有 lastIndex问题 每次匹配前需要将lastIndex 置为0\n            let startIndex = defaultTagRE.lastIndex = 0; // 自动会变 ，每次用的时候置为0\n            while (match = defaultTagRE.exec(text)) {\n                let endIndex = match.index; // 匹配到索引    abc {{ aa }} {{bb}} cd\n\n                if (endIndex > startIndex) {\n                    tokens.push(JSON.stringify(text.slice(startIndex, endIndex)));\n                }\n                tokens.push(`_s(${match[1].trim()})`);\n                startIndex = endIndex + match[0].length\n            }\n            if (startIndex < text.length) { // 最后的尾巴放进去\n                tokens.push(JSON.stringify(text.slice(startIndex)));\n            }\n            return `_v(${tokens.join('+')})` // 最后将动态数据 和非动态的拼接在一起\n        }\n    }\n}\n\nfunction genChildren(ast) {\n    const children = ast.children;\n    return children.map(child => gen(child)).join(',')\n}\n\nfunction genCode(ast) {\n    // 字符串拼接 拼接成我想要的就可以 \n\n    let code;\n    code = `_c(\"${ast.tag}\",${\n        ast.attrs.length? genProps(ast.attrs) : \"undefined\"\n    }${\n        ast.children ? ','+genChildren(ast) :''\n    })`; // _c('div',{classNanem:\"xxx\"},createTextVnode('hello world'))\n    return code;\n}\n// 将模板变成render函数 通过 with + new Function的方式让字符串变成js语法来执行\nexport function compileToFunction(template) {\n    let ast = parserHTML(template)\n\n    // 通过ast语法树转化成render函数\n    let code = genCode(ast);\n    const render = new Function(`with(this){return ${code}}`); // 将字符串变成了函数\n    return render;\n}\n// 4.12继续\n\n// 将template转化成ast语法树 -》 再讲语法树转化成一个字符串拼接在一起\n// ast 是用来描述语言本身的\n// vdom 描述dom元素的","export function createElement(vm, tag, data = {}, ...children) {\n    return vnode(vm,tag,data,children,data.key,null)\n}\n\nexport function createTextNode(vm,text) {\n    return vnode(vm,null,null,null,null,text)\n}\n\nfunction vnode(vm,tag,data,children,key,text){\n    return {\n        vm,\n        tag,\n        data,\n        children,\n        key,\n        text\n        // ...\n    }\n}","export function patch(oldVnode,vnode){ // oldVnode 可能是后续做虚拟节点的时候 是两个虚拟节点的比较\n\n    const isRealElement = oldVnode.nodeType; // 如果有说明他是一个dom元素\n\n    if(isRealElement){\n        const oldElm = oldVnode;\n\n        // 需要获取父节点 将当前节点的下一个元素作为参照物 将他插入，之后删除老节点\n\n        const parentNode = oldElm.parentNode; // 父节点\n\n        let el = createElm(vnode); // 根据虚拟节点\n        parentNode.insertBefore(el,oldElm.nextSibling);\n        parentNode.removeChild(oldElm)\n\n        return el;\n    }\n    // diff算法\n}\nfunction createElm(vnode){\n    let {tag,data,children,text} = vnode;\n    if(typeof tag === 'string'){ // 元素\n        vnode.el = document.createElement(tag); // 后续我们需要diff算法 拿虚拟节点比对后更新dom\n        children.forEach(child=>{\n            vnode.el.appendChild(createElm(child)); // 递归渲染\n        })\n    }else{ // 文本\n        vnode.el = document.createTextNode(text);\n    }\n    return vnode.el; // 从根虚拟节点创建真实节点\n}\n\n// 每次更新页面的话 dom结果是不会变的， 我调用render方法时，数据变化了会根据数据渲染成新的虚拟节点，用新的虚拟节点渲染dom","import { createElement, createTextNode } from \"./vdom/index\"\nimport { patch } from \"./vdom/patch\"\n\n// 创造对应的虚拟节点 进行渲染\nexport function lifeCycleMixin(Vue) {\n    Vue.prototype._c = function() {\n        return createElement(this, ...arguments)\n    }\n    Vue.prototype._v = function() {\n        return createTextNode(this, ...arguments)\n    }\n    Vue.prototype._s = function(value) { // 将数据转化成字符串 因为使用的变量对应的结果可能是一个对象\n        if(typeof value === 'object' && value !== null){\n            return JSON.stringify(value)\n        }\n        return value;\n    }\n    Vue.prototype._render = function() {\n        const vm = this;\n        const render = vm.$options.render;\n        let vnode = render.call(vm); // _c( _s _v)  with(this)\n        return vnode;\n    }\n    Vue.prototype._update = function(vnode) { // 将虚拟节点变成真实节点\n        // 将vnode 渲染el元素中\n        const vm = this;\n        vm.$el = patch(vm.$el,vnode); // 可以初始化渲染， 后续更新也走这个patch方法\n    }\n}\n// 将模板变成ast -> render  -> render函数产生虚拟节点(数据得是渲染好的)---|\n\n\nexport function mountComponent(vm, el) {\n    // 实现页面的挂载流程\n    vm.$el = el;// 先将el挂载到实例上 \n    const updateComponent = () => {\n        // 需要调用生成的render函数 获取到虚拟节点  -> 生成真实的dom\n        vm._update(vm._render());\n    }\n    updateComponent(); // 如果稍后数据变化 也调用这个函数重新执行 \n    // 观察者模式 + 依赖收集 + diff算法\n}","let oldArrayPrototype = Array.prototype;\n// arrayProptotype.__proto__ = Array.prototype;\n\nlet arrayPrototype = Object.create(oldArrayPrototype);\nlet methods = [\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'reverse',\n    'sort',\n    'splice'\n]\nmethods.forEach(method => { // 用户调用push方法会先经历我自己重写的方法,之后调用数组原来的方法\n    arrayPrototype[method] = function(...args) {\n\n        console.log('数组修改了')\n\n\n        let inserted;\n        let ob = this.__ob__;\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args; // 数组\n                break;\n            case 'splice': // arr.splice(1,1,xxx)\n                inserted = args.slice(2); // 接去掉前两个参数\n            default:\n                break\n        }\n        if (inserted) {\n            // 对新增的数据再次进行观测\n            ob.observeArray(inserted)\n        }\n        return oldArrayPrototype[method].call(this, ...args)\n    }\n})\nexport default arrayPrototype\n\n","import arrayPrototype from \"./array\";\r\n\r\nclass Observer{\r\n    constructor(data){\r\n        // 如果是数组的话也是用defineProperty会浪费很多性能 很少用户会通过arr[878] = 123\r\n        // vue3中的polyfill 直接就给数组做代理了\r\n         // 改写数组的方法，如果用户调用了可以改写数组方法的api 那么我就去劫持这个方法\r\n        // 变异方法 push pop shift unshift reverse sort splice \r\n        Object.defineProperty(data,'__ob__',{\r\n            value:this,\r\n            enumerable:false\r\n        })\r\n         // 如果有__ob__属性 说明被观测过了\r\n        // 修改数组的索引和长度是无法更新视图的\r\n        if(Array.isArray(data)){\r\n            // 需要重写这7个方法\r\n            data.__proto__ = arrayPrototype; \r\n            // 直接将属性赋值给这个对象\r\n            // 如果数组里面放的是对象类型 我期望他也会被变成响应式的\r\n            this.observeArray(data);\r\n        }else{\r\n            this.walk(data)\r\n        }\r\n    }\r\n    observeArray(data){\r\n        data.forEach(item=> observe(item)); //如果是对象我才进行观测了  \r\n    }\r\n    walk(data){ // 循环对象 尽量不用for in （会遍历原型链）\r\n        let keys = Object.keys(data); // [0,1,2]\r\n        keys.forEach(key=> { //没有重写数组里的每一项\r\n            defineReactive(data,key,data[key])\r\n        })\r\n    }\r\n}\r\n// 性能不好的原因在于 所有的属性都被重新定义了一遍\r\n// 一上来需要将对象深度代理 性能差\r\nfunction defineReactive(data,key,value){ //  闭包\r\n    // 属性会全部被重写增加了get和set\r\n    observe(value); // 递归代理属性\r\n    Object.defineProperty(data,key,{\r\n        get(){ // vm.xxx\r\n            return value;\r\n        },\r\n        set(newValue){ // vm.xxx = {a:1} 赋值一个对象的话 也可以实现响应式数据\r\n            if(newValue === value) return\r\n            observe(newValue)\r\n            value = newValue;\r\n        }\r\n    })\r\n}\r\nexport function observe(data) {\r\n    if(typeof data !== 'object' || data == null){\r\n        return ; // 如果不是对象类型，那么不要做任何处理\r\n    }\r\n    if(data.__ob__){\r\n        // 说明这个属性已经被代理过了\r\n        return data\r\n    }\r\n\r\n    // 我稍后要区分 如果一个对象已经被观测了，就不要再次被观测了\r\n    // __ob__ 标识是否有被观测过\r\n\r\n    return new Observer(data)\r\n};\r\n\r\n\r\n// 每个类头有一个prototype 指向了一个公共的空间\r\n// 每个实例可以通过__proto__ 找到所属类的prototype对应的内容\r\n\r\n\r\n\r\n// 1.在Vue2中对象的响应式原理，就是给每个属性增加get和set，而且是递归操作 （用户在写代码的时候尽量不要把所有的属性都放在data中，层次尽可能不要太深）, 赋值一个新对象也会被变成响应式的\r\n// 2.数组没有使用defineProperty 采用的是函数劫持创造一个新的原型重写了这个原型的7个方法，用户在调用的时候采用的是这7个方法。我们增加了逻辑如果是新增的数据会再次被劫持 。 最终调用数组的原有方法 （注意数字的索引和长度没有被监控）  数组中对象类型会被进行响应式处理","import { observe } from \"./observe/index\";\r\n\r\nexport function initState(vm) {\r\n    const options = vm.$options\r\n\r\n    // 后续实现计算属性 、 watcher 、 props 、methods\r\n    if (options.data) {\r\n        initData(vm);\r\n    }\r\n}\r\n\r\nfunction proxy(vm, source, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[source][key]\r\n        },\r\n        set(newValue) {\r\n            vm[source][key] = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;\r\n    // 如果是函数就拿到函数的返回值 否则就直接采用data作为数据源\r\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data\r\n\r\n    // 属性劫持 采用defineProperty将所有的属性进行劫持\r\n\r\n    // 我期望用户可以直接通过 vm.xxx 获取值， 也可以这样取值 vm._data.xxx\r\n    for (let key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n    observe(data)\r\n}","import { compileToFunction } from \"./compiler/index\";\r\nimport { mountComponent } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\n\r\nexport default function initMixin(Vue) {\r\n    Vue.prototype._init = function(options) {\r\n        const vm = this;\r\n        vm.$options = options // 所有后续的扩展方法都有一个$options选项可以获取用户的所有选项\r\n        // 对于实例的数据源 props data methods computed watch\r\n        // props data\r\n        initState(vm);\r\n        // vue中会判断如果是$开头的属性不会被变成响应式数据\r\n\r\n\r\n\r\n        // 状态初始化完毕后需要进行页面挂载\r\n        if (vm.$options.el) { // el 属性 和直接调用$mount是一样的\r\n            vm.$mount(vm.$options.el)\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        const options = vm.$options;\r\n        if (!options.render) {\r\n            let template = options.template;\r\n            if (!template) {\r\n                template = el.outerHTML\r\n            }\r\n            // 将template变成render函数\r\n\r\n            // 创建render函数 -》 虚拟dom  -》 渲染真实dom\r\n\r\n            const render =  compileToFunction(template); // 开始编译\r\n            options.render = render;\r\n        }\r\n        mountComponent(vm,el)// 一定存在了\r\n        console.log(options.render.toString())\r\n    }\r\n    // diff算法 主要是两个虚拟节点的比对  我们需要根据模板渲染出一个render函数，render函数可以返回一个虚拟节点 ,数据更新了重新调用render函数 可以再返回一个虚拟节点，\r\n}\r\n\r\n\r\n","// 整个自己编写的Vue的入口\n\nimport initMixin from \"./init\"\nimport { lifeCycleMixin } from \"./lifecycle\";\n\n// es6的类 要求所有的扩展都在类的内部来进行扩展\n\nfunction Vue(options){\n    this._init(options);\n}\ninitMixin(Vue);// 后续在扩展都可以采用这种方式\nlifeCycleMixin(Vue)\n\n// 给Vue添加原型方法我们通过文件的方式来添加，防止所有的功能都在一个文件中来处理\nexport default Vue"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","defaultTagRE","parserHTML","html","advance","n","substring","root","stack","createASTElement","tagName","attrs","tag","children","parent","type","start","element","length","push","end","pop","chars","text","replace","textEnd","indexOf","startTagMatch","parseStartTag","matches","match","attr","name","value","genProps","str","i","obj","split","reduce","memo","current","key","JSON","stringify","slice","gen","node","genCode","test","tokens","startIndex","lastIndex","exec","endIndex","index","trim","join","genChildren","ast","map","child","code","compileToFunction","template","render","Function","createElement","vm","data","vnode","createTextNode","patch","oldVnode","isRealElement","nodeType","oldElm","parentNode","el","createElm","insertBefore","nextSibling","removeChild","document","forEach","appendChild","lifeCycleMixin","Vue","prototype","_c","arguments","_v","_s","_render","$options","call","_update","$el","mountComponent","updateComponent","oldArrayPrototype","Array","arrayPrototype","Object","create","methods","method","console","log","inserted","ob","__ob__","args","observeArray","Observer","defineProperty","enumerable","isArray","__proto__","walk","item","observe","keys","defineReactive","get","set","newValue","initState","options","initData","proxy","source","_data","initMixin","_init","$mount","querySelector","outerHTML","toString"],"mappings":"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"}