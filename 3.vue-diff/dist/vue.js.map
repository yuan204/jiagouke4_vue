{"version":3,"file":"vue.js","sources":["../src/globalAPI/index.js","../src/compiler/index.js","../src/observe/dep.js","../src/utils/nextTick.js","../src/observe/schedular.js","../src/observe/watcher.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export default function initGlobalAPI(Vue) {\n    Vue.options = {}\n    Vue.mixin = function(options) { // {a:1,beforeCreate:[]}   {b：2,beforeCreate:function()}\n        this.options = mergeOptions(this.options, options);\n        console.log(this.options,555)\n        return this;\n    }\n}\nconst LIFECYCLE_HOOKS = ['beforeCreate', 'mounted'];\nconst strats = {}\nLIFECYCLE_HOOKS.forEach(hook=>{\n    strats[hook] = function(parentVal,childVal){\n        if(childVal){\n            if(parentVal){\n                return parentVal.concat(childVal); // 最终把声明周期都合并在一起了\n            }else{\n                return [childVal]\n            }\n        }else{\n            return parentVal\n        }\n    }\n})\n// 如何合并两个对象？\nexport function mergeOptions(parent, child) {\n    const options = {}\n    for (let key in parent) {\n        mergeField(key);\n    }\n    for (let key in child) {\n        if (!(key in parent)) {\n            mergeField(key);\n        }\n    }\n\n    function mergeField(key) {\n        if (strats[key]) {\n            options[key] = strats[key](parent[key], child[key])\n        } else {\n            options[key] = child[key] || parent[key];\n        }\n\n    }\n    return options\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 用来描述标签的\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的  捕获的是结束标签的标签名\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的  分组1 拿到的是属性名  , 分组3 ，4， 5 拿到的是key对应的值\n\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的    />    >   \nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // 匹配双花括号中间单的内容\n\nfunction parserHTML(html) {\n    function advance(n) {\n        html = html.substring(n); // 每次根据传入的长度截取html\n    }\n    let root; // 树的操作 ，需要根据开始标签和结束标签产生一个树\n    // 如何构建树的父子关系\n    let stack = [];\n\n    function createASTElement(tagName, attrs) {\n        return {\n            tag: tagName,\n            attrs,\n            children: [],\n            parent: null,\n            type: 1\n        }\n    }\n\n    function start(tagName, attrs) {\n        let element = createASTElement(tagName, attrs);\n        if (root == null) {\n            root = element;\n        }\n        let parent = stack[stack.length - 1]; // 取到栈中的最后一个\n        if (parent) {\n            element.parent = parent; // 让这个元素记住自己的父亲是谁\n            parent.children.push(element) // 让父亲记住儿子是谁\n        }\n        stack.push(element); // 将元素放到栈中\n    }\n\n    function end(tagName) {\n        stack.pop();\n    }\n\n    function chars(text) {\n        text = text.replace(/\\s/g, '');\n        if (text) {\n            let parent = stack[stack.length - 1];\n            parent.children.push({\n                type: 3,\n                text\n            })\n        }\n    }\n    //  ast 描述的是语法本身 ，语法中没有的，不会被描述出来  虚拟dom 是描述真实dom的可以自己增添属性\n    while (html) { // 一个个字符来解析将结果抛出去\n        let textEnd = html.indexOf('<');\n        if (textEnd === 0) {\n            const startTagMatch = parseStartTag(); // 解析开始标签  {tag:'div',attrs:[{name:\"id\",value:\"app\"}]}\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs);\n                continue\n            }\n            let matches;\n            if (matches = html.match(endTag)) { // <div>    </div>  不是开始就会走道结束\n                end(matches[1]);\n                advance(matches[0].length);\n                continue\n            }\n        }\n        let text;\n        if (textEnd >= 0) {\n            text = html.substring(0, textEnd)\n        }\n        if (text) {\n            advance(text.length);\n            chars(text);\n        }\n    }\n\n    function parseStartTag() {\n        const matches = html.match(startTagOpen);\n        if (matches) {\n            const match = {\n                tagName: matches[1],\n                attrs: []\n            }\n            advance(matches[0].length);\n            // 继续解析开始标签的属性 \n            let end, attr\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) { // 只要没有匹配到结束标签就一直匹配\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true });\n                advance(attr[0].length); // 解析一个属性删除一个\n            }\n            if (end) {\n                advance(end[0].length);\n                return match;\n            }\n        }\n    }\n    return root;\n}\n\nfunction genProps(attrs) {\n    let str = '';\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i];\n        // style=\"color:red;background:blue\"\n        if (attr.name === 'style') { // style=\"{color:red,background:blue}\"\n            let obj = {}\n            attr.value.split(';').reduce((memo, current) => {\n                let [key, value] = current.split(':')\n                memo[key] = value;\n                return memo;\n            }, obj);\n            attr.value = obj;\n        }\n\n        // 特殊的属性 style\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0,-1)}}`\n}\n\nfunction gen(node) {\n    if (node.type === 1) {\n        return genCode(node)\n    } else {\n        let text = node.text;\n        if (!defaultTagRE.test(text)) {\n            return `_v(${JSON.stringify(text)})` // 不带表达式的\n        } else {\n            let tokens = [];\n            let match;\n            // exec 遇到全局匹配会有 lastIndex问题 每次匹配前需要将lastIndex 置为0\n            let startIndex = defaultTagRE.lastIndex = 0; // 自动会变 ，每次用的时候置为0\n            while (match = defaultTagRE.exec(text)) {\n                let endIndex = match.index; // 匹配到索引    abc {{ aa }} {{bb}} cd\n\n                if (endIndex > startIndex) {\n                    tokens.push(JSON.stringify(text.slice(startIndex, endIndex)));\n                }\n                tokens.push(`_s(${match[1].trim()})`);\n                startIndex = endIndex + match[0].length\n            }\n            if (startIndex < text.length) { // 最后的尾巴放进去\n                tokens.push(JSON.stringify(text.slice(startIndex)));\n            }\n            return `_v(${tokens.join('+')})` // 最后将动态数据 和非动态的拼接在一起\n        }\n    }\n}\n\nfunction genChildren(ast) {\n    const children = ast.children;\n    return children.map(child => gen(child)).join(',')\n}\n\nfunction genCode(ast) {\n    // 字符串拼接 拼接成我想要的就可以 \n\n    let code;\n    code = `_c(\"${ast.tag}\",${\n        ast.attrs.length? genProps(ast.attrs) : \"undefined\"\n    }${\n        ast.children ? ','+genChildren(ast) :''\n    })`; // _c('div',{classNanem:\"xxx\"},createTextVnode('hello world'))\n    return code;\n}\n// 将模板变成render函数 通过 with + new Function的方式让字符串变成js语法来执行\nexport function compileToFunction(template) {\n    let ast = parserHTML(template)\n\n    // 通过ast语法树转化成render函数\n    let code = genCode(ast);\n    const render = new Function(`with(this){return ${code}}`); // 将字符串变成了函数\n    return render;\n}\n// 4.12继续\n\n// 将template转化成ast语法树 -》 再讲语法树转化成一个字符串拼接在一起\n// ast 是用来描述语言本身的\n// vdom 描述dom元素的","let did = 0;\nclass Dep{ // 作用是收集watcher\n    constructor(){\n        this.id = did++;\n        this.watchers = []\n    }\n    depend(){ // watcher 和 dep是一个多对多的关系\n        Dep.target.addDep(this); // 让watcher去记录dep\n    }\n    addWatcher(watcher){\n        this.watchers.push(watcher)\n    }\n    notify(){\n        this.watchers.forEach(watcher=>watcher.update());\n    }\n}\nDep.target = null; // 描述当前watcher是谁的\nexport default Dep","let callbacks = [];\nlet waiting = false;\nfunction flushCallbacks(){\n    callbacks.forEach(cb=>cb());\n    callbacks = [];\n    waiting = false;\n}\n\n// 异步任务分为 两种 宏任务、微任务\n// 宏任务 setTimeout setImmediate(ie下支持性能优于setTimeout)\n// 微任务 promise.then mutationObserver\n// vue在更新的时候希望尽快的更新页面 promise.then  mutationObserver  setImmediate setTimeout\n// vue3不在考虑兼容性问题了 所以后续vue3中直接使用promise.then\n\n\nlet timeFunc;\nif(typeof Promise !== 'undefined'){\n    let p = Promise.resolve();\n    timeFunc = ()=>{\n        p.then(flushCallbacks)\n    }\n}else if(typeof MutationObserver !== 'undefined'){\n    let observer = new MutationObserver(flushCallbacks); // mutationObserver放的回调是异步执行的\n    let textNode = document.createTextNode(1) //. 文本节点内容先是1\n    observer.observe(textNode,{characterData:true});\n    timeFunc = () =>{\n        textNode.textContent = 2; // 改成了2  就会触发更新了\n    }\n}else if(typeof setImmediate !== 'undefined'){\n    timeFunc = ()=>{\n        setImmediate(flushCallbacks)\n    }\n}else {\n    timeFunc = ()=>{\n        setTimeout(flushCallbacks,0)\n    }\n}\n\nexport function nextTick(cb){\n    callbacks.push(cb);\n    if(!waiting){\n        waiting = true\n        timeFunc();\n    }\n}\n","import { nextTick } from \"../utils/nextTick\";\nlet queue = [];\nlet has = {};\nlet pending = false;\nfunction flushSchedularQueue(){\n    queue.forEach(watcher=>watcher.run())\n    queue = [];\n    has = {};\n    pending = false\n}\nexport function queueWatcher(watcher){\n    let id = watcher.id;\n    if(has[id] == null){\n        queue.push(watcher)\n        has[id] = true;\n        if(!pending){\n            nextTick(() => { // 万一一个属性 对应多个更新，那么可能会开启多个定时器\n                flushSchedularQueue(); // 批处理操作 ， 防抖\n            });\n            pending = true;\n        }\n    }\n}","import Dep from \"./dep\";\nimport { queueWatcher } from \"./schedular\";\nlet wid = 0;\nclass Watcher{\n    constructor(vm,fn,cb,options){\n        this.vm = vm;\n        this.fn = fn;\n        this.cn = cb;\n        this.options = options\n        this.deps = [];\n        this.depsId = new Set()\n        this.id = wid++\n        this.get(); // 实现页面的渲染\n    }\n    get(){\n        // todo ....\n        Dep.target = this\n        this.fn(); // 去实例中取值  触发getter\n        Dep.target = null;\n        // 只有在渲染的时候才有Dep.target属性\n    }\n    addDep(dep){\n        let id = dep.id;// 获取收集器的id 做去重操作\n        if(!this.depsId.has(id)){\n            this.deps.push(dep)\n            this.depsId.add(id)\n            dep.addWatcher(this)\n        }\n    }\n    update(){\n        queueWatcher(this);\n    }\n    run(){\n        console.log('run')\n        this.get();\n    }\n}\n\n\n\n// 让属性记住对应的渲染函数，如果属性发生变化就调用对应的渲染函数\n\n// 我们给每个属性增加一个收集器， 通过收集器来收集watcher\n\n// 一个属性有一个dep -》 watcher？ 一个属性对应多个watcher\n// 一个watcher 对应多少个dep？ 一个watcher对应多个dep\n\n// 多对多\n\nexport default Watcher","export function createElement(vm, tag, data = {}, ...children) {\n    return vnode(vm,tag,data,children,data.key,null)\n}\n\nexport function createTextNode(vm,text) {\n    return vnode(vm,undefined,undefined,undefined,undefined,text)\n}\n\nfunction vnode(vm,tag,data,children,key,text){\n    return {\n        vm,\n        tag,\n        data,\n        children,\n        key,\n        text\n        // ...\n    }\n}","function isSameVnode(n1, n2) {\n    return n1.tag == n2.tag && n1.key === n2.key\n}\n\nexport function patch(oldVnode, vnode) { // oldVnode 可能是后续做虚拟节点的时候 是两个虚拟节点的比较\n\n    const isRealElement = oldVnode.nodeType; // 如果有说明他是一个dom元素\n\n    if (isRealElement) {\n        const oldElm = oldVnode;\n\n        // 需要获取父节点 将当前节点的下一个元素作为参照物 将他插入，之后删除老节点\n\n        const parentNode = oldElm.parentNode; // 父节点\n\n        let el = createElm(vnode); // 根据虚拟节点\n        parentNode.insertBefore(el, oldElm.nextSibling);\n        parentNode.removeChild(oldElm)\n        return el;\n    } else {\n        patchVnode(oldVnode, vnode);\n        return vnode.el;\n    }\n    // diff算法\n}\n\n\n\nexport function createElm(vnode) {\n    let { tag, data, children, text } = vnode;\n    if (typeof tag === 'string') { // 元素\n        vnode.el = document.createElement(tag); // 后续我们需要diff算法 拿虚拟节点比对后更新dom\n        children.forEach(child => {\n            vnode.el.appendChild(createElm(child)); // 递归渲染\n        })\n        // 样式类名....\n        updateProperties(vnode);\n    } else { // 文本\n        vnode.el = document.createTextNode(text);\n    }\n    return vnode.el; // 从根虚拟节点创建真实节点\n}\n\nfunction updateProperties(vnode, oldProps = {}) {\n    let newProps = vnode.data || {}; // 新props \n    // 老的props \n    // 属性的diff算法\n    let el = vnode.el;\n    // 比较sytle 特殊一些 需要看下样式\n    let oldStyle = oldProps.style || {};\n    let newStyle = newProps.style || {}\n    for (let key in oldStyle) {\n        if (!(key in newStyle)) {\n            el.style[key] = ''\n        }\n    }\n    for (let key in oldProps) {\n        if (!(key in newProps)) {\n            el.removeAttribute(key)\n        }\n    }\n    for (let key in newProps) {\n        if (key === 'style') {\n            for (let styleKey in newProps[key]) {\n                el.style[styleKey] = newProps[key][styleKey]\n            }\n        } else if (key === 'class') {\n            el.className = newProps[key];\n        } else {\n            el.setAttribute(key, newProps[key])\n        }\n    }\n}\n\n// 每次更新页面的话 dom结果是不会变的， 我调用render方法时，数据变化了会根据数据渲染成新的虚拟节点，用新的虚拟节点渲染dom\n\n\n\n\n\n\nfunction patchVnode(oldVnode, vnode) {\n    // case1: 前后两个虚拟节点不是相同节点直接替换掉即可\n    if (!isSameVnode(oldVnode, vnode)) {\n        return oldVnode.el.parentNode.replaceChild(createElm(vnode), oldVnode.el)\n    }\n    // 标签一样我就复用节点\n    let el = vnode.el = oldVnode.el\n    // case2：两个元素虚拟节点都是文本的情况下 用新文本换掉老的文本即可\n    if (!oldVnode.tag) { // 是文本\n        if (oldVnode.text !== vnode.text) {\n            return el.textContent = vnode.text\n        }\n    }\n    // case3: 两个都是标签 比较属性\n    updateProperties(vnode, oldVnode.data)\n\n    // case4: 比较儿子节点\n    // 一方有儿子 一方没儿子 \n    // 两方都有儿子 \n    let oldChildren = oldVnode.children || [];\n    let newChildren = vnode.children || [];\n\n    if (oldChildren.length > 0 && newChildren.length > 0) {\n        // diff算法是一层层的比较 不涉及到跨级比较\n        updateChildren(el, oldChildren, newChildren);\n    } else if (newChildren.length > 0) {\n        for (let i = 0; i < newChildren.length; i++) {\n            el.appendChild(createElm(newChildren[i]))\n        }\n    } else if (oldChildren.length > 0) {\n        el.innerHTML = ''; // 直接清除掉所有节点\n    }\n}\n\n\n\n\n\n\n\n// diff算法采用了双指针的方式进行比对，并且是O(n)\nfunction updateChildren(el, oldChildren, newChildren) {\n    // vue中创建了4个指针 分别指向 老孩子和新孩子的头尾\n    // 分别依次进行比较有一方先比较完毕就结束比较\n    let oldStartIndex = 0;\n    let oldEndIndex = oldChildren.length - 1;\n    let newStartIndex = 0;\n    let newEndIndex = newChildren.length - 1;\n\n    let oldStartVnode = oldChildren[0];\n    let oldEndVnode = oldChildren[oldEndIndex];\n    let newStartVnode = newChildren[0];\n    let newEndVnode = newChildren[newEndIndex];\n\n    // 有一方比完就停止  儿子的规模变大而变大 O(n)\n\n    function makeIndexByKey(children) {\n        return children.reduce((memo, current, index) => (memo[current.key] = index, memo), {})\n    }\n    let map = makeIndexByKey(oldChildren);\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n        // 这里在优化dom的常见操作 向前追加 向后追加  尾部移动头部\n        // 复用节点\n        if (!oldStartVnode) {\n            oldStartVnode = oldChildren[++oldStartIndex]\n        } else if (!oldEndVnode) {\n            oldEndVnode = oldChildren[--oldEndIndex]\n        } else if (isSameVnode(oldStartVnode, newStartVnode)) { // 说明两个元素是同一个元素 要比较属性，和他的儿子\n            patchVnode(oldStartVnode, newStartVnode);\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newStartVnode = newChildren[++newStartIndex];\n        } else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            patchVnode(oldEndVnode, newEndVnode);\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newEndVnode = newChildren[--newEndIndex];\n        } else if (isSameVnode(oldEndVnode, newStartVnode)) { // 尾头比对\n            patchVnode(oldEndVnode, newStartVnode);\n            el.insertBefore(oldEndVnode.el, oldStartVnode.el)\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newStartVnode = newChildren[++newStartIndex]\n        } else if (isSameVnode(oldStartVnode, newEndVnode)) { // 头尾比对\n            patchVnode(oldStartVnode, newEndVnode);\n            el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling)\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newEndVnode = newChildren[--newEndIndex]\n        }\n        // 会根据key进行diff算法 ， 所以在使用的时候如果列表是可操作的，尽量避开用index作为key\n        else {\n            // 乱序比对 我们需要尽可能找出能复用的元素出来\n            let moveIndex = map[newStartVnode.key];\n            if (moveIndex == undefined) {\n                // 不用复用直接创建插入即可\n                el.insertBefore(createElm(newStartVnode), oldStartVnode.el)\n            } else {\n                // 有的话直接移动老的节点\n                let moveVnode = oldChildren[moveIndex];\n                oldChildren[moveIndex] = undefined\n                el.insertBefore(moveVnode.el, oldStartVnode.el);\n                patchVnode(moveVnode, newStartVnode); // 比属性 比儿子\n            }\n            newStartVnode = newChildren[++newStartIndex]\n        }\n    }\n    if (newStartIndex <= newEndIndex) { // 将新增的直接插入\n        for (let i = newStartIndex; i <= newEndIndex; i++) {\n            // 可能是像前面添加 还有可能是像后添加\n            // el.appendChild(createElm(newChildren[i]))\n            let nextEle = newChildren[newEndIndex + 1] == null ? null : newChildren[newEndIndex + 1].el;\n\n            // nextEle 可能是null 可能是一个dom元素\n            el.insertBefore(createElm(newChildren[i]), nextEle); // 如果anchor参照物是null 会被变成appendChild\n        }\n    }\n    if (oldStartIndex <= oldEndIndex) { // 老的多余的元素删除掉即可\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\n            if (oldChildren[i] !== undefined) {\n                el.removeChild(oldChildren[i].el)\n            }\n        }\n    }\n    // Vue3采用了最长递增子序列，找到最长不需要移动的序列，从而减少了移动操作\n\n}","import Watcher from \"./observe/watcher\"\nimport { createElement, createTextNode } from \"./vdom/index\"\nimport { patch } from \"./vdom/patch\"\n\n// 创造对应的虚拟节点 进行渲染\n\n\nexport function callHook(vm,hook){\n   const handlers =  vm.$options[hook]\n   handlers && handlers.forEach(hook=>hook.call(vm))\n}\n\n\nexport function lifeCycleMixin(Vue) {\n    Vue.prototype._c = function() {\n        return createElement(this, ...arguments)\n    }\n    Vue.prototype._v = function() {\n        return createTextNode(this, ...arguments)\n    }\n    Vue.prototype._s = function(value) { // 将数据转化成字符串 因为使用的变量对应的结果可能是一个对象\n        if(typeof value === 'object' && value !== null){\n            return JSON.stringify(value)\n        }\n        return value;\n    }\n    Vue.prototype._render = function() {\n        const vm = this;\n        const render = vm.$options.render;\n        let vnode = render.call(vm); // _c( _s _v)  with(this)\n        return vnode;\n    }\n    Vue.prototype._update = function(vnode) { // 将虚拟节点变成真实节点\n        // 将vnode 渲染el元素中\n        const vm = this;\n        const prevVnode = vm._vnode; // 上一次的vnode\n        if(!prevVnode){\n            vm.$el = patch(vm.$el,vnode); // 可以初始化渲染， 后续更新也走这个patch方法\n        }else{\n            vm.$el = patch(prevVnode,vnode);\n        }\n        vm._vnode = vnode; // 渲染完毕后更新vnode\n      \n    }\n}\n// 将模板变成ast -> render  -> render函数产生虚拟节点(数据得是渲染好的)---|\n\n\nexport function mountComponent(vm, el) {\n    // 实现页面的挂载流程\n    vm.$el = el;// 先将el挂载到实例上\n    callHook('vm','beforeMount') \n    const updateComponent = () => {\n        // 需要调用生成的render函数 获取到虚拟节点  -> 生成真实的dom\n        vm._update(vm._render());\n    }\n\n    new Watcher(vm,updateComponent,()=>{\n        console.log('页面重新渲染 updated')\n    },true)\n    // updateComponent(); // 如果稍后数据变化 也调用这个函数重新执行 \n    // 观察者模式 + 依赖收集 + diff算法\n}\n\n","let oldArrayPrototype = Array.prototype;\n// arrayProptotype.__proto__ = Array.prototype;\n\nlet arrayPrototype = Object.create(oldArrayPrototype);\nlet methods = [\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'reverse',\n    'sort',\n    'splice'\n]\nmethods.forEach(method => { // 用户调用push方法会先经历我自己重写的方法,之后调用数组原来的方法\n    arrayPrototype[method] = function(...args) {\n        let inserted;\n        let ob = this.__ob__;\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args; // 数组\n                break;\n            case 'splice': // arr.splice(1,1,xxx)\n                inserted = args.slice(2); // 接去掉前两个参数\n            default:\n                break\n        }\n        if (inserted) {\n            // 对新增的数据再次进行观测\n            ob.observeArray(inserted)\n        }\n        let result =  oldArrayPrototype[method].call(this, ...args)\n        // 更新页面...  靠的都是watcher数组并没有收集watcher\n        ob.dep.notify();\n        return result\n    }\n})\nexport default arrayPrototype\n\n","import arrayPrototype from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\n// 1.给每个对象和数组也增加dep属性\r\n// 2.当页面取值的时候回执行get方法， 拿到刚才新增的dep属性，让她记住这个watcher\r\n// 3.稍后数据变化 触发当前数组的dep中存放的watcher去更新\r\n\r\nclass Observer{\r\n    constructor(data){ // data 的类型是对象也可能是数组\r\n        // 如果是数组的话也是用defineProperty会浪费很多性能 很少用户会通过arr[878] = 123\r\n        // vue3中的polyfill 直接就给数组做代理了\r\n         // 改写数组的方法，如果用户调用了可以改写数组方法的api 那么我就去劫持这个方法\r\n        // 变异方法 push pop shift unshift reverse sort splice \r\n\r\n        this.dep = new Dep(); // 给所有的对象都增加一个dep, 后续我们会给对象增添新的属性也期望能实现更新\r\n        Object.defineProperty(data,'__ob__',{\r\n            value:this,\r\n            enumerable:false\r\n        })\r\n         // 如果有__ob__属性 说明被观测过了\r\n        // 修改数组的索引和长度是无法更新视图的\r\n        if(Array.isArray(data)){\r\n            // 需要重写这7个方法\r\n            data.__proto__ = arrayPrototype; \r\n            // 直接将属性赋值给这个对象\r\n            // 如果数组里面放的是对象类型 我期望他也会被变成响应式的\r\n            this.observeArray(data);\r\n        }else{\r\n            this.walk(data)\r\n        }\r\n    }\r\n    observeArray(data){\r\n        data.forEach(item=> observe(item)); //如果是对象我才进行观测了  \r\n    }\r\n    walk(data){ // 循环对象 尽量不用for in （会遍历原型链）\r\n        let keys = Object.keys(data); // [0,1,2]\r\n        keys.forEach(key=> { //没有重写数组里的每一项\r\n            defineReactive(data,key,data[key])\r\n        })\r\n    }\r\n}\r\n// 性能不好的原因在于 所有的属性都被重新定义了一遍\r\n// 一上来需要将对象深度代理 性能差\r\nfunction dependArray(value){\r\n    for(let i = 0; i < value.length;i++){\r\n        let temp = value[i];\r\n        temp.__ob__ && temp.__ob__.dep.depend(); // 让数组中的对象类型做依赖收集  [[[]]]\r\n        if(Array.isArray(temp)){\r\n            dependArray(temp)\r\n        }\r\n    }\r\n}\r\nfunction defineReactive(data,key,value){ //  闭包\r\n    // 属性会全部被重写增加了get和set\r\n    let dep = new Dep()\r\n    let childOb = observe(value); // 递归代理属性 , childOb就是当前的实例\r\n    Object.defineProperty(data,key,{\r\n        get(){ // vm.xxx\r\n            if(Dep.target){\r\n               dep.depend()  // 依赖收集 要将属性收集对应的watcher\r\n               if(childOb){\r\n                childOb.dep.depend(); // 让数组和对象也记录一下渲染watcher\r\n                if(Array.isArray(value)){\r\n                    dependArray(value);\r\n                }\r\n               }\r\n            }\r\n            return value;\r\n        },\r\n        set(newValue){ // vm.xxx = {a:1} 赋值一个对象的话 也可以实现响应式数据\r\n            if(newValue === value) return\r\n            childOb = observe(newValue)\r\n            value = newValue;\r\n            dep.notify(); // 通知依赖的watcher去重新渲染\r\n        }\r\n    })\r\n}\r\nexport function observe(data) {\r\n    if(typeof data !== 'object' || data == null){\r\n        return ; // 如果不是对象类型，那么不要做任何处理\r\n    }\r\n    if(data.__ob__){\r\n        // 说明这个属性已经被代理过了\r\n        return data\r\n    }\r\n\r\n    // 我稍后要区分 如果一个对象已经被观测了，就不要再次被观测了\r\n    // __ob__ 标识是否有被观测过\r\n\r\n    return new Observer(data)\r\n};\r\n\r\n\r\n// 每个类头有一个prototype 指向了一个公共的空间\r\n// 每个实例可以通过__proto__ 找到所属类的prototype对应的内容\r\n\r\n\r\n\r\n// 1.在Vue2中对象的响应式原理，就是给每个属性增加get和set，而且是递归操作 （用户在写代码的时候尽量不要把所有的属性都放在data中，层次尽可能不要太深）, 赋值一个新对象也会被变成响应式的\r\n// 2.数组没有使用defineProperty 采用的是函数劫持创造一个新的原型重写了这个原型的7个方法，用户在调用的时候采用的是这7个方法。我们增加了逻辑如果是新增的数据会再次被劫持 。 最终调用数组的原有方法 （注意数字的索引和长度没有被监控）  数组中对象类型会被进行响应式处理","import { observe } from \"./observe/index\";\r\n\r\nexport function initState(vm) {\r\n    const options = vm.$options\r\n\r\n    // 后续实现计算属性 、 watcher 、 props 、methods\r\n    if (options.data) {\r\n        initData(vm);\r\n    }\r\n}\r\n\r\nfunction proxy(vm, source, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[source][key]\r\n        },\r\n        set(newValue) {\r\n            vm[source][key] = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;\r\n    // 如果是函数就拿到函数的返回值 否则就直接采用data作为数据源\r\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data\r\n\r\n    // 属性劫持 采用defineProperty将所有的属性进行劫持\r\n\r\n    // 我期望用户可以直接通过 vm.xxx 获取值， 也可以这样取值 vm._data.xxx\r\n    for (let key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n    observe(data)\r\n}","import { compileToFunction } from \"./compiler/index\";\r\nimport { mergeOptions } from \"./globalAPI/index\";\r\nimport { callHook, mountComponent } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\n\r\nexport default function initMixin(Vue) {\r\n    Vue.prototype._init = function(options) {\r\n        const vm = this;\r\n        vm.$options = mergeOptions(vm.constructor.options,options)  // 所有后续的扩展方法都有一个$options选项可以获取用户的所有选项\r\n        // 对于实例的数据源 props data methods computed watch\r\n        // props data\r\n        callHook(vm,'beforeCreate')\r\n        initState(vm);\r\n        // vue中会判断如果是$开头的属性不会被变成响应式数据\r\n        callHook(vm,'created')\r\n        // 状态初始化完毕后需要进行页面挂载\r\n        if (vm.$options.el) { // el 属性 和直接调用$mount是一样的\r\n            vm.$mount(vm.$options.el)\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        const options = vm.$options;\r\n        if (!options.render) {\r\n            let template = options.template;\r\n            if (!template) {\r\n                template = el.outerHTML\r\n            }\r\n            // 将template变成render函数\r\n\r\n            // 创建render函数 -》 虚拟dom  -》 渲染真实dom\r\n\r\n            const render =  compileToFunction(template); // 开始编译\r\n            options.render = render;\r\n        }\r\n        mountComponent(vm,el)// 一定存在了\r\n        console.log(options.render.toString())\r\n    }\r\n    // diff算法 主要是两个虚拟节点的比对  我们需要根据模板渲染出一个render函数，render函数可以返回一个虚拟节点 ,数据更新了重新调用render函数 可以再返回一个虚拟节点，\r\n}\r\n\r\n\r\n","// 整个自己编写的Vue的入口\n\n\nimport initGlobalAPI from \"./globalAPI/index\";\nimport initMixin from \"./init\"\nimport { lifeCycleMixin } from \"./lifecycle\";\nimport { nextTick } from \"./utils/nextTick\";\n\n// es6的类 要求所有的扩展都在类的内部来进行扩展\n\nfunction Vue(options) {\n    this._init(options);\n}\ninitMixin(Vue); // 后续在扩展都可以采用这种方式\nlifeCycleMixin(Vue)\n\ninitGlobalAPI(Vue)\n\nVue.prototype.$nextTick = nextTick\n\n// 给Vue添加原型方法我们通过文件的方式来添加，防止所有的功能都在一个文件中来处理\n\n// import { compileToFunction } from \"./compiler/index\";\n// import { createElm, patch } from \"./vdom/patch\";\n// let vm1 = new Vue({\n//     data: {\n//         name: 'zf',\n//         age: 12\n//     },\n// });\n// let template = `<div >\n//     <li key=\"A\">A</li>\n//     <li key=\"B\">B</li>\n//     <li key=\"C\">C</li>\n//     <li key=\"D\">D</li>\n// </div>`\n// let render = compileToFunction(template);\n// let oldVnode = render.call(vm1);\n// let ele = createElm(oldVnode);\n// document.body.appendChild(ele); // 就让虚拟节点和真实节点做了映射\n\n// // diff算法的比对是平级比对\n// // 比对的时候 主要比对标签名和key 来判断是不是同一个元素 ，如果标签和key 都一样说明两个元素是同一个元素\n// let vm2 = new Vue({});\n// let newTemplate = `<div>\n//     <li key=\"M\">M</li>\n//     <li key=\"Q\">Q</li>\n//     <li key=\"D\">D</li>\n//     <li key=\"E\">E</li>\n//     <li key=\"F\">F</li>\n// </div>`\n// let newRender = compileToFunction(newTemplate);\n// let newVnode = newRender.call(vm2);\n// setTimeout(() => {\n//     patch(oldVnode, newVnode)\n\n// }, 2000);\n\n\n\n\n\nexport default Vue"],"names":["initGlobalAPI","Vue","options","mixin","mergeOptions","console","log","LIFECYCLE_HOOKS","strats","forEach","hook","parentVal","childVal","concat","parent","child","key","mergeField","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","defaultTagRE","parserHTML","html","advance","n","substring","root","stack","createASTElement","tagName","attrs","tag","children","type","start","element","length","push","end","pop","chars","text","replace","textEnd","indexOf","startTagMatch","parseStartTag","matches","match","attr","name","value","genProps","str","i","obj","split","reduce","memo","current","JSON","stringify","slice","gen","node","genCode","test","tokens","startIndex","lastIndex","exec","endIndex","index","trim","join","genChildren","ast","map","code","compileToFunction","template","render","Function","did","Dep","id","watchers","target","addDep","watcher","update","callbacks","waiting","flushCallbacks","cb","timeFunc","Promise","p","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","nextTick","queue","has","pending","flushSchedularQueue","run","queueWatcher","wid","Watcher","vm","fn","cn","deps","depsId","Set","get","dep","add","addWatcher","createElement","data","vnode","undefined","isSameVnode","n1","n2","patch","oldVnode","isRealElement","nodeType","oldElm","parentNode","el","createElm","insertBefore","nextSibling","removeChild","patchVnode","appendChild","updateProperties","oldProps","newProps","oldStyle","style","newStyle","removeAttribute","styleKey","className","setAttribute","replaceChild","oldChildren","newChildren","updateChildren","innerHTML","oldStartIndex","oldEndIndex","newStartIndex","newEndIndex","oldStartVnode","oldEndVnode","newStartVnode","newEndVnode","makeIndexByKey","moveIndex","moveVnode","nextEle","callHook","handlers","$options","call","lifeCycleMixin","prototype","_c","arguments","_v","_s","_render","_update","prevVnode","_vnode","$el","mountComponent","updateComponent","oldArrayPrototype","Array","arrayPrototype","Object","create","methods","method","inserted","ob","__ob__","args","observeArray","result","notify","Observer","defineProperty","enumerable","isArray","__proto__","walk","item","keys","defineReactive","dependArray","temp","depend","childOb","set","newValue","initState","initData","proxy","source","_data","initMixin","_init","constructor","$mount","querySelector","outerHTML","toString","$nextTick"],"mappings":"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"}