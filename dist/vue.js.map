{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 用来描述标签的\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的  捕获的是结束标签的标签名\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的  分组1 拿到的是属性名  , 分组3 ，4， 5 拿到的是key对应的值\n\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的    />    >   \nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // 匹配双花括号中间单的内容\n\nfunction parserHTML(html) {\n    function advance(n) {\n        html = html.substring(n); // 每次根据传入的长度截取html\n    }\n\n    let root; // 树的操作 ，需要根据开始标签和结束标签产生一个树\n    // 如何构建树的父子关系\n    let stack = [];\n    function createASTElement(tagName,attrs){\n        return {\n            tag:tagName,\n            attrs,\n            children:[],\n            parent:null,\n            type:1\n        }\n    }\n    function start(tagName,attrs){\n        let element = createASTElement(tagName,attrs);\n        if(root == null){\n            root = element;\n        }\n        let parent = stack[stack.length-1]; // 取到栈中的最后一个\n        if(parent) {\n            element.parent = parent; // 让这个元素记住自己的父亲是谁\n            parent.children.push(element) // 让父亲记住儿子是谁\n        }\n        stack.push(element); // 将元素放到栈中\n    }\n    function end(tagName){\n        stack.pop();\n    }\n    function chars(text){\n        text =text.replace(/\\s/g,'');\n        if(text){\n            let parent = stack[stack.length-1];\n            parent.children.push({\n                type:3,\n                text\n            })\n        }\n    }\n    //  </div>\n    while (html) { // 一个个字符来解析将结果抛出去\n        let textEnd = html.indexOf('<');\n        if (textEnd === 0) {\n            const startTagMatch =  parseStartTag(); // 解析开始标签  {tag:'div',attrs:[{name:\"id\",value:\"app\"}]}\n            if(startTagMatch){\n                start(startTagMatch.tagName,startTagMatch.attrs);\n                continue\n            }\n            let matches;\n            if(matches = html.match(endTag)){ // <div>    </div>  不是开始就会走道结束\n                end(matches[1]);\n                advance(matches[0].length);\n                continue\n            }\n        }\n        let text;\n        if(textEnd >= 0){\n            text = html.substring(0,textEnd)\n        }\n        if(text){\n            advance(text.length);\n            chars(text);\n        }\n    }\n    function parseStartTag() {\n        const matches = html.match(startTagOpen);\n        if (matches) {\n            const match = {\n                tagName: matches[1],\n                attrs: []\n            }\n            advance(matches[0].length);\n            // 继续解析开始标签的属性 \n            let end, attr\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) { // 只要没有匹配到结束标签就一直匹配\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true});\n                advance(attr[0].length); // 解析一个属性删除一个\n            }\n            if (end) {\n                advance(end[0].length);\n                return match;\n            }\n        }\n    }\n    return root;\n}\n\n\n\n\nexport function compileToFunction(template) {\n    let ast = parserHTML(template)\n    console.log(ast)\n\n\n}\n\n// 将template转化成ast语法树 -》 再讲语法树转化成一个字符串拼接在一起\n\n// ast 是用来描述语言本身的\n// vdom 描述dom元素的","let oldArrayPrototype = Array.prototype;\n// arrayProptotype.__proto__ = Array.prototype;\n\nlet arrayPrototype = Object.create(oldArrayPrototype);\nlet methods = [\n    'push',\n    'pop',\n    'shift',\n    'unshift',\n    'reverse',\n    'sort',\n    'splice'\n]\nmethods.forEach(method => { // 用户调用push方法会先经历我自己重写的方法,之后调用数组原来的方法\n    arrayPrototype[method] = function(...args) {\n\n        console.log('数组修改了')\n\n\n        let inserted;\n        let ob = this.__ob__;\n        switch (method) {\n            case 'push':\n            case 'unshift':\n                inserted = args; // 数组\n                break;\n            case 'splice': // arr.splice(1,1,xxx)\n                inserted = args.slice(2); // 接去掉前两个参数\n            default:\n                break\n        }\n        if (inserted) {\n            // 对新增的数据再次进行观测\n            ob.observeArray(inserted)\n        }\n        return oldArrayPrototype[method].call(this, ...args)\n    }\n})\nexport default arrayPrototype\n\n","import arrayPrototype from \"./array\";\r\n\r\nclass Observer{\r\n    constructor(data){\r\n        // 如果是数组的话也是用defineProperty会浪费很多性能 很少用户会通过arr[878] = 123\r\n        // vue3中的polyfill 直接就给数组做代理了\r\n         // 改写数组的方法，如果用户调用了可以改写数组方法的api 那么我就去劫持这个方法\r\n        // 变异方法 push pop shift unshift reverse sort splice \r\n        Object.defineProperty(data,'__ob__',{\r\n            value:this,\r\n            enumerable:false\r\n        })\r\n         // 如果有__ob__属性 说明被观测过了\r\n        // 修改数组的索引和长度是无法更新视图的\r\n        if(Array.isArray(data)){\r\n            // 需要重写这7个方法\r\n            data.__proto__ = arrayPrototype; \r\n            // 直接将属性赋值给这个对象\r\n            // 如果数组里面放的是对象类型 我期望他也会被变成响应式的\r\n            this.observeArray(data);\r\n        }else{\r\n            this.walk(data)\r\n        }\r\n    }\r\n    observeArray(data){\r\n        data.forEach(item=> observe(item)); //如果是对象我才进行观测了  \r\n    }\r\n    walk(data){ // 循环对象 尽量不用for in （会遍历原型链）\r\n        let keys = Object.keys(data); // [0,1,2]\r\n        keys.forEach(key=> { //没有重写数组里的每一项\r\n            defineReactive(data,key,data[key])\r\n        })\r\n    }\r\n}\r\n// 性能不好的原因在于 所有的属性都被重新定义了一遍\r\n// 一上来需要将对象深度代理 性能差\r\nfunction defineReactive(data,key,value){ //  闭包\r\n    // 属性会全部被重写增加了get和set\r\n    observe(value); // 递归代理属性\r\n    Object.defineProperty(data,key,{\r\n        get(){ // vm.xxx\r\n            return value;\r\n        },\r\n        set(newValue){ // vm.xxx = {a:1} 赋值一个对象的话 也可以实现响应式数据\r\n            if(newValue === value) return\r\n            observe(newValue)\r\n            value = newValue;\r\n        }\r\n    })\r\n}\r\nexport function observe(data) {\r\n    if(typeof data !== 'object' || data == null){\r\n        return ; // 如果不是对象类型，那么不要做任何处理\r\n    }\r\n    if(data.__ob__){\r\n        // 说明这个属性已经被代理过了\r\n        return data\r\n    }\r\n\r\n    // 我稍后要区分 如果一个对象已经被观测了，就不要再次被观测了\r\n    // __ob__ 标识是否有被观测过\r\n\r\n    return new Observer(data)\r\n};\r\n\r\n\r\n// 每个类头有一个prototype 指向了一个公共的空间\r\n// 每个实例可以通过__proto__ 找到所属类的prototype对应的内容\r\n\r\n\r\n\r\n// 1.在Vue2中对象的响应式原理，就是给每个属性增加get和set，而且是递归操作 （用户在写代码的时候尽量不要把所有的属性都放在data中，层次尽可能不要太深）, 赋值一个新对象也会被变成响应式的\r\n// 2.数组没有使用defineProperty 采用的是函数劫持创造一个新的原型重写了这个原型的7个方法，用户在调用的时候采用的是这7个方法。我们增加了逻辑如果是新增的数据会再次被劫持 。 最终调用数组的原有方法 （注意数字的索引和长度没有被监控）  数组中对象类型会被进行响应式处理","import { observe } from \"./observe/index\";\r\n\r\nexport function initState(vm) {\r\n    const options = vm.$options\r\n\r\n    // 后续实现计算属性 、 watcher 、 props 、methods\r\n    if (options.data) {\r\n        initData(vm);\r\n    }\r\n}\r\n\r\nfunction proxy(vm, source, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[source][key]\r\n        },\r\n        set(newValue) {\r\n            vm[source][key] = newValue;\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) {\r\n    let data = vm.$options.data;\r\n    // 如果是函数就拿到函数的返回值 否则就直接采用data作为数据源\r\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data\r\n\r\n    // 属性劫持 采用defineProperty将所有的属性进行劫持\r\n\r\n    // 我期望用户可以直接通过 vm.xxx 获取值， 也可以这样取值 vm._data.xxx\r\n    for (let key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n    observe(data)\r\n}","import { compileToFunction } from \"./compiler/index\";\r\nimport { initState } from \"./state\";\r\n\r\nexport default function initMixin(Vue) {\r\n    Vue.prototype._init = function(options) {\r\n        const vm = this;\r\n        vm.$options = options // 所有后续的扩展方法都有一个$options选项可以获取用户的所有选项\r\n        // 对于实例的数据源 props data methods computed watch\r\n        // props data\r\n        initState(vm);\r\n        // vue中会判断如果是$开头的属性不会被变成响应式数据\r\n\r\n\r\n\r\n        // 状态初始化完毕后需要进行页面挂载\r\n        if (vm.$options.el) { // el 属性 和直接调用$mount是一样的\r\n            vm.$mount(vm.$options.el)\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el);\r\n        const options = vm.$options;\r\n        if (!options.render) {\r\n            let template = options.template;\r\n            if (!template) {\r\n                template = el.outerHTML\r\n            }\r\n            // 将template变成render函数\r\n\r\n            // 创建render函数 -》 虚拟dom  -》 渲染真实dom\r\n\r\n            const render =  compileToFunction(template); // 开始编译\r\n            options.render = render;\r\n        }\r\n        options.render // 一定存在了\r\n    }\r\n\r\n    // diff算法 主要是两个虚拟节点的比对  我们需要根据模板渲染出一个render函数，render函数可以返回一个虚拟节点 ,数据更新了重新调用render函数 可以再返回一个虚拟节点，\r\n}\r\n\r\n\r\n","// 整个自己编写的Vue的入口\n\nimport initMixin from \"./init\"\n\n// es6的类 要求所有的扩展都在类的内部来进行扩展\n\nfunction Vue(options){\n    this._init(options);\n}\ninitMixin(Vue);// 后续在扩展都可以采用这种方式\n\n// 给Vue添加原型方法我们通过文件的方式来添加，防止所有的功能都在一个文件中来处理\nexport default Vue"],"names":["ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parserHTML","html","advance","n","substring","root","stack","createASTElement","tagName","attrs","tag","children","parent","type","start","element","length","push","end","pop","chars","text","replace","textEnd","indexOf","startTagMatch","parseStartTag","matches","match","attr","name","value","compileToFunction","template","ast","console","log","oldArrayPrototype","Array","prototype","arrayPrototype","Object","create","methods","forEach","method","inserted","ob","__ob__","args","slice","observeArray","call","Observer","data","defineProperty","enumerable","isArray","__proto__","walk","item","observe","keys","key","defineReactive","get","set","newValue","initState","vm","options","$options","initData","proxy","source","_data","initMixin","Vue","_init","el","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}